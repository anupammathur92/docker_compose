#docker version
version: '3.8'
services:
    #env for the php with apache
    php-apache-environment:
        container_name: php-apache
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - ./src:/var/www/html/
        ports:
            - 3334:80
    #env for the MySQL
    db:
        container_name: db
        image: mysql
        restart: always
        hostname: mydbhost
        environment:
            MYSQL_ROOT_PASSWORD: 'ff@123'
            MYSQL_USER: 'myuser'
            MYSQL_PASSWORD: 'ff@123'
            MYSQL_DATABASE: 'newprac'
        volumes:
            - db_data:/var/lib/mysql
        ports:
            - 3306:3306
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        ports:
            - 8080:80
        restart: always
        environment:
            PMA_HOST: db
        depends_on:
            - db
    psdb:
        image: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: ff@123
        volumes:
            - psdb_data:/var/lib/postgresql/data
    pgadmin:
        container_name: pgadmin4_container
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: anupam.mathur@fiftyfivetech.io
            PGADMIN_DEFAULT_PASSWORD: example
        ports:
            - 5050:80
    adminer:
        image: adminer
        restart: always
        ports:
            - 3333:8080
        depends_on:
            - psdb
    redis:
        image: redis
        container_name: app_redis
        ports:
            - 6379:6379
    memcached:
        container_name: memcached
        image: memcached
        ports:
            - 11211:11211
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.6.1
        container_name: elasticsearch
        environment:
          - cluster.name=docker-cluster
          - bootstrap.memory_lock=true
          - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
          memlock:
            soft: -1
            hard: -1
        volumes:
          - esdata:/usr/share/elasticsearch/data
        ports:
          - "9200:9200"
        networks:
          - esnet
    kibana:
        image: docker.elastic.co/kibana/kibana:6.6.1
        container_name: kibana
        environment:
          - ./kibana.yml:/usr/share/kibana/config/kibana.yml
        ports:
          - "5601:5601"
        networks:
          - esnet
volumes:
    db_data:
    psdb_data:
    esdata:
        driver: local
networks:
    esnet: